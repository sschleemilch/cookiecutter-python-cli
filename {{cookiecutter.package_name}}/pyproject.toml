{%- set license_ids = {
    'MIT license': 'MIT',
    'BSD license': 'BSD',
    'ISC license': 'ISCL',
    'Apache Software License 2.0': 'Apache Software License',
    'GNU General Public License v3': 'GPLv3'
} %}

[project]
name = "{{cookiecutter.package_name}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.package_short_description}}"
authors = [{name = "{{cookiecutter.author_name}}", email="{{cookiecutter.author_email}}"}]
{%- if cookiecutter.open_source_license in license_ids %}
license = {text = "{{ license_ids[cookiecutter.open_source_license] }}"}
{%- endif %}
readme = "README.md"
dependencies = [
    "click>=8.1.7",
    "rich-click>=1.8.3",
    "rich>=13.9.4",
]
requires-python = ">=3.10"

[project.urls]
homepage = "{{cookiecutter.homepage}}"
documentation = "{{cookiecutter.documentation}}"

[project.scripts]
{{cookiecutter.package_name_cli}} = "{{cookiecutter.package_name}}.cli:cli"

[tool.uv]
package = true

[dependency-groups]
dev = [
    "mypy>=1.13.0",
    "ruff>=0.7.3",
    "bump2version>=1.0.1",
    "pre-commit>=4.0.1",
    "pytest-cov>=6.0.0",
    "pytest>=8.3.3",
]
[tool.mypy]
files = ["src/{{cookiecutter.package_name}}"]
show_error_codes = true
strict = true
enable_error_code = ["redundant-expr", "truthy-bool"]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "PGH", "B", "SIM"]

