{%- set license_classifiers = {
    'MIT license': 'License :: OSI Approved :: MIT License',
    'BSD license': 'License :: OSI Approved :: BSD License',
    'ISC license': 'License :: OSI Approved :: ISC License (ISCL)',
    'Apache Software License 2.0': 'License :: OSI Approved :: Apache Software License',
    'GNU General Public License v3': 'License :: OSI Approved :: GNU General Public License v3 (GPLv3)'
} %}

{%- set license_ids = {
    'MIT license': 'MIT',
    'BSD license': 'BSD',
    'ISC license': 'ISCL',
    'Apache Software License 2.0': 'Apache Software License',
    'GNU General Public License v3': 'GPLv3'
} %}

[tool.poetry]
name = "{{cookiecutter.package_name}}"
homepage = "{{cookiecutter.homepage}}"
documentation = "{{cookiecutter.documentation}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.package_short_description}}"
authors = ["{{cookiecutter.author_name}} <{{cookiecutter.author_email}}>"]
{%- if cookiecutter.open_source_license in license_ids %}
license = "{{ license_ids[cookiecutter.open_source_license] }}"
{%- endif %}
readme = "README.md"
classifiers = [
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Typing :: Typed",
{%- if cookiecutter.open_source_license in license_classifiers %}
    '{{ license_classifiers[cookiecutter.open_source_license] }}',
{%- endif %}
]

[tool.poetry.dependencies]
python = "^3.7"
rich = "^12.5.1"
rich-click = "^1.5.1"

[tool.poetry.dev-dependencies]
black = "^22.6"
mypy = "^0.971"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
pre-commit = "^2.20.0"

[build-system]
requires = ["poetry-core>=1.0.8"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
files = ["src/{{cookiecutter.package_name}}"]
show_error_codes = true
strict = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.isort]
profile = "black"

[tool.black]
line-length = 120

[tool.poetry.scripts]
{{cookiecutter.package_name_cli}} = "{{cookiecutter.package_name}}.__main__:main"
